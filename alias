# -- logcat related ------------------------

alias log='adb logcat -v threadtime -v color'

function logtee() {
    log | tee $1
}

function logpid() {
    log --pid=$1
}

function logpkg() {
    log --pid=$(adb shell pidof $1)
}

# -- logcat related end --------------------

# -- bugreport related ------------------------

## grep logs in bugreport by time order
function loggrep() {
   if [ -f logcat ];then
     find . -name 'logcat*' -printf "%P\n" | sort -t '.' -k2nr | xargs grep "$1"
   elif [ -d FS/data/misc/logd ];then
     cd FS/data/misc/logd
     find . -name 'logcat*' -printf "%P\n" | sort -t '.' -k2nr | xargs grep "$1"
     cd -
   fi
}
function logegrep() {
   if [ -f logcat ];then
     find . -name 'logcat*' -printf "%P\n" | sort -t '.' -k2nr | xargs egrep "$1"
   elif [ -d FS/data/misc/logd ];then
     cd FS/data/misc/logd
     find . -name 'logcat*' -printf "%P\n" | sort -t '.' -k2nr | xargs egrep "$1"
     cd -
   fi
}

# print dumpsys service from bugreport
function printser() {
  name=${1//\./\\.}
  name=${1//\//\\/}
  file="$(ls bugreport-*.txt | sort -V | tail -n1)"
  sed -n "/^SERVICE .*$name/,/^SERVICE/p" $file
}

# print dumpsys package from bugreport
function printpkg() {
  name=${1//\./\\.}
  name=${1//\//\\/}
  file="$(ls bugreport-*.txt | sort -V | tail -n1)"
  sed -n "/^  Package \[.*$name\]/,/^  Package /p" $file
}

# -- bugreport related end --------------------

# -- flash -----------------------------------

function flash_if_exist() {
    img=$1
    file=$2
    if [ -f $file ]; then
        fastboot flash $img $file
    fi
}

function flash() {
  DIR="."
  if [ $ANDROID_PRODUCT_OUT ]; then
    DIR=$ANDROID_PRODUCT_OUT
  fi

  wipedata=0
  disable_verity=0
  for item in $*; do
    if [[ "$item" == '-w' ]]; then
      wipedata=1
    fi
    if [ $item == '-d' ]; then
      disable_verity=1
    fi
    if [[ $item != "-"* ]]; then
      DIR=$item
    fi
  done

  echo "flash $DIR"
  adb reboot bootloader

  flash_if_exist dtbo $DIR/dtbo.img

  if [[ $disable_verity == 1 ]]; then
    echo -e "\n\n disable verity ........\n\n"
    fastboot --disable-verity --disable-verification flash vbmeta $DIR/vbmeta.img
  else
    flash_if_exist vbmeta $DIR/vbmeta.img
  fi

  flash_if_exist vbmeta_system $DIR/vbmeta_system.img
  flash_if_exist boot $DIR/boot.img
  flash_if_exist recovery $DIR/recovery.img
  if [[ -f $DIR/super.img ]]; then
      flash_if_exist super $DIR/super.img
  else
      flash_if_exist system $DIR/system.img
      flash_if_exist vendor $DIR/vendor.img
      flash_if_exist product $DIR/product.img
  fi

  if [[ $wipedata == 1 ]]; then
    fastboot -w
  fi

  fastboot reboot
}

# -- flash end  -----------------------------------

# unpack ramdisk to current dir
function unpack_ramdisk()
{
  gunzip -c $1 | cpio -idm
}
